<div class="container my-5">
    <div class="row">
        <!-- User Info Card -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="mb-3">
                        <div class="user-avatar mx-auto">
                            <i class="fas fa-user-circle fa-5x text-primary"></i>
                        </div>
                    </div>
                    <h4 class="fw-bold"><%= user.name %></h4>
                    <p class="text-muted mb-2"><%= user.email %></p>
                    <% if (user.is_admin) { %>
                        <span class="badge bg-warning text-dark">
                            <i class="fas fa-crown me-1"></i>
                            Administrador
                        </span>
                    <% } else { %>
                        <span class="badge bg-primary">
                            <i class="fas fa-user me-1"></i>
                            Cliente
                        </span>
                    <% } %>
                    
                    <div class="mt-3 pt-3 border-top">
                        <small class="text-muted">
                            <i class="fas fa-calendar me-1"></i>
                            Membro desde <%= new Date(user.created_at).toLocaleDateString('pt-BR') %>
                        </small>
                    </div>

                    <% if (user.is_admin) { %>
                        <div class="mt-3">
                            <a href="/admin" class="btn btn-primary w-100">
                                <i class="fas fa-cog me-2"></i>
                                Painel Administrativo
                            </a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Profile Settings -->
        <div class="col-lg-8">
            <!-- Update Profile -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        Informações Pessoais
                    </h5>
                </div>
                <div class="card-body">
                    <% if (typeof success !== 'undefined' && req.query.success) { %>
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle me-2"></i>
                            Perfil atualizado com sucesso!
                        </div>
                    <% } %>

                    <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
                        <div class="alert alert-danger">
                            <ul class="mb-0">
                                <% errors.forEach(error => { %>
                                    <li><%= error.msg %></li>
                                <% }) %>
                            </ul>
                        </div>
                    <% } %>

                    <form action="/auth/perfil" method="POST" class="needs-validation" novalidate>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Nome completo</label>
                                <input type="text" class="form-control" id="name" name="name" 
                                       value="<%= typeof formData !== 'undefined' ? formData.name : user.name %>" 
                                       required>
                                <div class="invalid-feedback">
                                    Digite seu nome completo
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" 
                                       value="<%= user.email %>" disabled>
                                <small class="text-muted">O email não pode ser alterado</small>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="phone" class="form-label">Telefone</label>
                                <input type="tel" class="form-control" id="phone" name="phone" 
                                       placeholder="(11) 99999-9999"
                                       value="<%= typeof formData !== 'undefined' ? formData.phone : (user.phone || '') %>">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Tipo de conta</label>
                                <input type="text" class="form-control" 
                                       value="<%= user.is_admin ? 'Administrador' : 'Cliente' %>" disabled>
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>
                                Salvar Alterações
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Change Password -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-lock me-2"></i>
                        Alterar Senha
                    </h5>
                </div>
                <div class="card-body">
                    <form id="changePasswordForm" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Senha atual</label>
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                            <div class="invalid-feedback">
                                Digite sua senha atual
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">Nova senha</label>
                            <input type="password" class="form-control" id="newPassword" name="newPassword" 
                                   minlength="6" required>
                            <div class="invalid-feedback">
                                A nova senha deve ter pelo menos 6 caracteres
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirmar nova senha</label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" 
                                   minlength="6" required>
                            <div class="invalid-feedback">
                                As senhas devem ser iguais
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-key me-2"></i>
                                Alterar Senha
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Order History -->
            <div class="card border-0 shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-shopping-bag me-2"></i>
                        Histórico de Pedidos
                    </h5>
                </div>
                <div class="card-body">
                    <% if (orders && orders.length > 0) { %>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Pedido</th>
                                        <th>Data</th>
                                        <th>Itens</th>
                                        <th>Status</th>
                                        <th>Total</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% orders.forEach(order => { %>
                                        <tr>
                                            <td>
                                                <strong>#<%= order.order_number %></strong>
                                            </td>
                                            <td>
                                                <%= new Date(order.created_at).toLocaleDateString('pt-BR') %>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">
                                                    <%= order.items_count %> <%= order.items_count === 1 ? 'item' : 'itens' %>
                                                </span>
                                            </td>
                                            <td>
                                                <% 
                                                let statusClass = 'secondary';
                                                let statusText = order.status;
                                                switch(order.status) {
                                                    case 'pending': statusClass = 'warning'; statusText = 'Pendente'; break;
                                                    case 'processing': statusClass = 'info'; statusText = 'Processando'; break;
                                                    case 'shipped': statusClass = 'primary'; statusText = 'Enviado'; break;
                                                    case 'delivered': statusClass = 'success'; statusText = 'Entregue'; break;
                                                    case 'cancelled': statusClass = 'danger'; statusText = 'Cancelado'; break;
                                                }
                                                %>
                                                <span class="badge bg-<%= statusClass %>"><%= statusText %></span>
                                            </td>
                                            <td>
                                                <strong>R$ <%= parseFloat(order.total).toFixed(2).replace('.', ',') %></strong>
                                            </td>
                                            <td>
                                                <a href="/pedido/<%= order.order_number %>" class="btn btn-sm btn-outline-primary">
                                                    Ver detalhes
                                                </a>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    <% } else { %>
                        <div class="text-center py-4">
                            <i class="fas fa-shopping-bag fa-3x text-muted mb-3"></i>
                            <h5>Nenhum pedido encontrado</h5>
                            <p class="text-muted">Você ainda não fez nenhum pedido.</p>
                            <a href="/produtos" class="btn btn-primary">
                                <i class="fas fa-shopping-cart me-2"></i>
                                Começar a comprar
                            </a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Form validation
(function() {
    'use strict';
    window.addEventListener('load', function() {
        const forms = document.getElementsByClassName('needs-validation');
        Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();

// Change password form
document.getElementById('changePasswordForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData);
    
    // Validate password confirmation
    if (data.newPassword !== data.confirmPassword) {
        showAlert('As senhas não conferem', 'danger');
        return;
    }
    
    try {
        const response = await fetch('/auth/alterar-senha', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert(result.message, 'success');
            this.reset();
            this.classList.remove('was-validated');
        } else {
            if (result.errors && result.errors.length > 0) {
                showAlert(result.errors.map(e => e.msg).join(', '), 'danger');
            } else {
                showAlert('Erro ao alterar senha', 'danger');
            }
        }
    } catch (error) {
        showAlert('Erro de conexão', 'danger');
    }
});

// Phone mask
document.getElementById('phone').addEventListener('input', function(e) {
    let value = e.target.value.replace(/\D/g, '');
    if (value.length >= 10) {
        if (value.length === 10) {
            value = '(' + value.substring(0, 2) + ') ' + value.substring(2, 6) + '-' + value.substring(6, 10);
        } else {
            value = '(' + value.substring(0, 2) + ') ' + value.substring(2, 7) + '-' + value.substring(7, 11);
        }
    }
    e.target.value = value;
});

// Password confirmation validation
document.getElementById('confirmPassword').addEventListener('input', function() {
    const password = document.getElementById('newPassword').value;
    const confirmPassword = this.value;
    
    if (password !== confirmPassword) {
        this.setCustomValidity('As senhas não conferem');
    } else {
        this.setCustomValidity('');
    }
});

function showAlert(message, type) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.card-body');
    container.insertBefore(alertDiv, container.firstChild);
    
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}
</script>

<style>
.user-avatar {
    width: 120px;
    height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: rgba(111, 66, 193, 0.1);
}

.card {
    transition: transform 0.2s ease;
}

.card:hover {
    transform: translateY(-2px);
}
</style>
